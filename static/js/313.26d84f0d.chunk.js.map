{"version":3,"file":"static/js/313.26d84f0d.chunk.js","mappings":"iKA8DA,UA5CwB,WACtB,IAAQA,GAAqBC,EAAAA,EAAAA,KAArBD,iBACAE,GAAyBC,EAAAA,EAAAA,KAAzBD,qBAuCR,OArCAE,EAAAA,EAAAA,YAAU,WACJJ,EAAiBK,MAMpB,KAEHD,EAAAA,EAAAA,YAAU,WACJF,EAAqBI,OAIxB,CAACJ,EAAqBI,QAEzBF,EAAAA,EAAAA,YAAU,WACJF,EAAqBK,QAIxB,CAACL,EAAqBK,SAEzBH,EAAAA,EAAAA,YAAU,WACJF,EAAqBM,QAIxB,CAACN,EAAqBM,SAEzBJ,EAAAA,EAAAA,YAAU,WACJF,EAAqBO,cAIxB,CAACP,EAAqBO,eAElB","sources":["components/AudioController/AudioController.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\n// context\r\nimport { useAudioConfig } from \"../../context/AudioConfig\";\r\nimport { useAudioController } from \"../../context/AudioController\";\r\n\r\n// sfx\r\n/* import popUpAudio from \"../../assets/audio/popUp.mp3\";\r\nimport clickAudio from \"../../assets/audio/ui5.mp3\";\r\nimport errorAudio from \"../../assets/audio/ui1.mp3\";\r\nimport goodAudio from \"../../assets/audio/bigClick.mp3\"; */\r\n\r\n// controllers\r\n/* const popUp = new Audio(popUpAudio);\r\nconst normalClick = new Audio(clickAudio);\r\nconst error = new Audio(errorAudio);\r\nconst good = new Audio(goodAudio); */\r\n\r\nconst AudioController = () => {\r\n  const { audioConfigState } = useAudioConfig();\r\n  const { audioControllerState } = useAudioController();\r\n\r\n  useEffect(() => {\r\n    if (audioConfigState.sfx) {\r\n      /*     popUp.load();\r\n      error.load();\r\n      good.load();\r\n      normalClick.load(); */\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioControllerState.good) {\r\n      /*       good.currentTime = 0;\r\n      good.play(); */\r\n    }\r\n  }, [audioControllerState.good]);\r\n\r\n  useEffect(() => {\r\n    if (audioControllerState.popUp) {\r\n      /*    popUp.currentTime = 0;\r\n      popUp.play(); */\r\n    }\r\n  }, [audioControllerState.popUp]);\r\n\r\n  useEffect(() => {\r\n    if (audioControllerState.error) {\r\n      /*   error.currentTime = 0;\r\n      error.play(); */\r\n    }\r\n  }, [audioControllerState.error]);\r\n\r\n  useEffect(() => {\r\n    if (audioControllerState.normalClick) {\r\n      /*  normalClick.currentTime = 0;\r\n      normalClick.play(); */\r\n    }\r\n  }, [audioControllerState.normalClick]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default AudioController;\r\n"],"names":["audioConfigState","useAudioConfig","audioControllerState","useAudioController","useEffect","sfx","good","popUp","error","normalClick"],"sourceRoot":""}